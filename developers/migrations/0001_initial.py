# -*- coding: utf-8 -*-
# Generated by Django 1.9.13 on 2017-09-16 08:39
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, verbose_name="dev's name")),
                ('email', models.EmailField(max_length=150, verbose_name="dev's email")),
                ('is_active', models.BooleanField(verbose_name='Is active')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='DevelopersQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('_current', models.SmallIntegerField(default=0, editable=False, verbose_name='current developers index')),
                ('name', models.CharField(max_length=100, verbose_name='DevelopersQueue name')),
                ('developer', models.ManyToManyField(to='developers.Developer')),
            ],
        ),
        migrations.CreateModel(
            name='ProductQueue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Product queue')),
                ('dev_queue', models.ManyToManyField(to='developers.DevelopersQueue')),
                ('receivers', models.ManyToManyField(to='developers.Developer')),
            ],
        ),
        migrations.CreateModel(
            name='AllDevelopers',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('developers.developer',),
            managers=[
                ('all_objects', django.db.models.manager.Manager()),
            ],
        ),
    ]
